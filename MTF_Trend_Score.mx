#MTF TREND SCORE - Multi-Timeframe Trend Analysis
#Includes: VWAP, 5/8/21 EMAs, 200 SMA across 5 timeframes
#Original concept based on MTF SQUEEZE PRO by CASEY BRETT

##Global Variables
input shortSMALength = 5;   # Added 5 SMA
input ema8Length = 8;       # Added 8 EMA
input emaLength = 21;
input sma50Length = 50;     # Added 50 SMA
input sma100Length = 100;   # Added 100 SMA
input longSMALength = 200;
input averageType = AverageType.EXPONENTIAL;

# Timeframe toggles
input DayLabel = yes;
input FourHourLabel = yes;
input HourLabel = yes;
input ThirtyMinLabel = yes;
input FifteenMinLabel = yes;
input FiveMinLabel = yes;
input ThreeMinLabel = yes;
input VWAPLabel = yes;

# Color definitions - 4-level gradient
DefineGlobalColor("StrongAbove", CreateColor(0, 100, 0));  # Dark Green
DefineGlobalColor("MildAbove", CreateColor(144, 238, 144));  # Light Green 
DefineGlobalColor("MildBelow", CreateColor(255, 182, 193));  # Light Red
DefineGlobalColor("StrongBelow", CreateColor(139, 0, 0));  # Dark Red

# Calculate Daily VWAP (skip for SPX/indices)
def dailyVWAP = if VWAPLabel then VWAP(period = "Day") else 0;
def priceAboveDailyVWAP = if VWAPLabel then close > dailyVWAP else no;

## Daily Timeframe
def dayPrice;
def dayShortSMA;  # Added 5 SMA
def day8EMA;      # Added 8 EMA
def dayEMA;
def day50SMA;     # Added 50 SMA
def day100SMA;    # Added 100 SMA
def dayLongSMA;
def dayAboveShortSMA;  # Added 5 SMA check
def dayAbove8EMA;      # Added 8 EMA check
def dayAboveEMA;
def dayAbove50SMA;     # Added 50 SMA check
def dayAbove100SMA;    # Added 100 SMA check
def dayAboveLongSMA;
def dayAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.DAY {
    dayPrice = close(period = "Day");
    dayShortSMA = Average(dayPrice, shortSMALength);  # Added 5 SMA
    day8EMA = ExpAverage(dayPrice, ema8Length);       # Added 8 EMA
    dayEMA = ExpAverage(dayPrice, emaLength);
    day50SMA = Average(dayPrice, sma50Length);        # Added 50 SMA
    day100SMA = Average(dayPrice, sma100Length);      # Added 100 SMA
    dayLongSMA = Average(dayPrice, longSMALength);
    dayAboveShortSMA = dayPrice > dayShortSMA;  # Added 5 SMA check
    dayAbove8EMA = dayPrice > day8EMA;          # Added 8 EMA check
    dayAboveEMA = dayPrice > dayEMA;
    dayAbove50SMA = dayPrice > day50SMA;       # Added 50 SMA check
    dayAbove100SMA = dayPrice > day100SMA;     # Added 100 SMA check
    dayAboveLongSMA = dayPrice > dayLongSMA;
    dayAggregationPeriod = 1;
}
else {
    dayPrice = 0;
    dayShortSMA = 0;  # Added 5 SMA
    day8EMA = 0;      # Added 8 EMA
    dayEMA = 0;
    day50SMA = 0;     # Added 50 SMA
    day100SMA = 0;    # Added 100 SMA
    dayLongSMA = 0;
    dayAboveShortSMA = 0;  # Added 5 SMA check
    dayAbove8EMA = 0;      # Added 8 EMA check
    dayAboveEMA = 0;
    dayAbove50SMA = 0;     # Added 50 SMA check
    dayAbove100SMA = 0;    # Added 100 SMA check
    dayAboveLongSMA = 0;
    dayAggregationPeriod = 0;
}

## 4-Hour Timeframe
def fourHourPrice;
def fourHourEMA;
def fourHourAboveEMA;
def fourHourAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.FOUR_HOURS {
    fourHourPrice = close(period = "4 Hours");
    fourHourEMA = ExpAverage(fourHourPrice, emaLength);
    fourHourAboveEMA = fourHourPrice > fourHourEMA;
    fourHourAggregationPeriod = 1;
}
else {
    fourHourPrice = 0;
    fourHourEMA = 0;
    fourHourAboveEMA = 0;
    fourHourAggregationPeriod = 0;
}

## 1-Hour Timeframe
def hourPrice;
def hourEMA;
def hourLongSMA;
def hourAboveEMA;
def hourAboveLongSMA;
def hourAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.HOUR {
    hourPrice = close(period = "1 Hour");
    hourEMA = ExpAverage(hourPrice, emaLength);
    hourLongSMA = Average(hourPrice, longSMALength);
    hourAboveEMA = hourPrice > hourEMA;
    hourAboveLongSMA = hourPrice > hourLongSMA;
    hourAggregationPeriod = 1;
}
else {
    hourPrice = 0;
    hourEMA = 0;
    hourLongSMA = 0;
    hourAboveEMA = 0;
    hourAboveLongSMA = 0;
    hourAggregationPeriod = 0;
}

## 30-Minute Timeframe
def thirtyMinPrice;
def thirtyMinEMA;
def thirtyMinAboveEMA;
def thirtyMinAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.THIRTY_MIN {
    thirtyMinPrice = close(period = "30 Min");
    thirtyMinEMA = ExpAverage(thirtyMinPrice, emaLength);
    thirtyMinAboveEMA = thirtyMinPrice > thirtyMinEMA;
    thirtyMinAggregationPeriod = 1;
}
else {
    thirtyMinPrice = 0;
    thirtyMinEMA = 0;
    thirtyMinAboveEMA = 0;
    thirtyMinAggregationPeriod = 0;
}

## 15-Minute Timeframe
def fifteenMinPrice;
def fifteenMinEMA;
def fifteenMinAboveEMA;
def fifteenMinAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.FIFTEEN_MIN {
    fifteenMinPrice = close(period = "15 Min");
    fifteenMinEMA = ExpAverage(fifteenMinPrice, emaLength);
    fifteenMinAboveEMA = fifteenMinPrice > fifteenMinEMA;
    fifteenMinAggregationPeriod = 1;
}
else {
    fifteenMinPrice = 0;
    fifteenMinEMA = 0;
    fifteenMinAboveEMA = 0;
    fifteenMinAggregationPeriod = 0;
}

## 5-Minute Timeframe
def fiveMinPrice;
def fiveMinEMA;
def fiveMinAboveEMA;
def fiveMinAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.FIVE_MIN {
    fiveMinPrice = close(period = "5 Min");
    fiveMinEMA = ExpAverage(fiveMinPrice, emaLength);
    fiveMinAboveEMA = fiveMinPrice > fiveMinEMA;
    fiveMinAggregationPeriod = 1;
}
else {
    fiveMinPrice = 0;
    fiveMinEMA = 0;
    fiveMinAboveEMA = 0;
    fiveMinAggregationPeriod = 0;
}

## 3-Minute Timeframe
def threeMinPrice;
def threeMinEMA;
def threeMinAboveEMA;
def threeMinAggregationPeriod;

if GetAggregationPeriod() <= AggregationPeriod.THREE_MIN {
    threeMinPrice = close(period = "3 Min");
    threeMinEMA = ExpAverage(threeMinPrice, emaLength);
    threeMinAboveEMA = threeMinPrice > threeMinEMA;
    threeMinAggregationPeriod = 1;
}
else {
    threeMinPrice = 0;
    threeMinEMA = 0;
    threeMinAboveEMA = 0;
    threeMinAggregationPeriod = 0;
}

# Add other labels in the specified order
AddLabel(
    VWAPLabel,
    if VWAPLabel then "VWAP: " + Round(dailyVWAP, 0) + " " else "VWAP: N/A ",
    if !VWAPLabel then Color.GRAY 
    else if AbsValue((close - dailyVWAP)/dailyVWAP)*100 > 2 then GlobalColor("StrongAbove")
    else if priceAboveDailyVWAP then GlobalColor("MildAbove")
    else if AbsValue((close - dailyVWAP)/dailyVWAP)*100 > 2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);

# 2. Daily Labels
AddLabel(
    DayLabel and dayAggregationPeriod,
    "D5: " + Round(dayShortSMA, 0) + " ",
    if (dayPrice - dayShortSMA)/dayShortSMA*100 > 2 then GlobalColor("StrongAbove")
    else if dayPrice > dayShortSMA then GlobalColor("MildAbove")
    else if (dayPrice - dayShortSMA)/dayShortSMA*100 < -2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
AddLabel(
    DayLabel and dayAggregationPeriod,
    "D8: " + Round(day8EMA, 0) + " ",
    if (dayPrice - day8EMA)/day8EMA*100 > 2 then GlobalColor("StrongAbove")
    else if dayPrice > day8EMA then GlobalColor("MildAbove")
    else if (dayPrice - day8EMA)/day8EMA*100 < -2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
AddLabel(
    DayLabel and dayAggregationPeriod,
    "D21: " + Round(dayEMA, 0) + " ",
    if (dayPrice - dayEMA)/dayEMA*100 > 2 then GlobalColor("StrongAbove")
    else if dayPrice > dayEMA then GlobalColor("MildAbove")
    else if (dayPrice - dayEMA)/dayEMA*100 < -2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
AddLabel(
    DayLabel and dayAggregationPeriod,
    "D50: " + Round(day50SMA, 0) + " ",
    if (dayPrice - day50SMA)/day50SMA*100 > 2 then GlobalColor("StrongAbove")
    else if dayPrice > day50SMA then GlobalColor("MildAbove")
    else if (dayPrice - day50SMA)/day50SMA*100 < -2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
AddLabel(
    DayLabel and dayAggregationPeriod,
    "D100: " + Round(day100SMA, 0) + " ",
    if (dayPrice - day100SMA)/day100SMA*100 > 2 then GlobalColor("StrongAbove")
    else if dayPrice > day100SMA then GlobalColor("MildAbove")
    else if (dayPrice - day100SMA)/day100SMA*100 < -2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
AddLabel(
    DayLabel and dayAggregationPeriod,
    "D200: " + Round(dayLongSMA, 0) + " ",
    if (dayPrice - dayLongSMA)/dayLongSMA*100 > 2 then GlobalColor("StrongAbove")
    else if dayPrice > dayLongSMA then GlobalColor("MildAbove")
    else if (dayPrice - dayLongSMA)/dayLongSMA*100 < -2 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);

# 4. 21 EMA Labels (Only keeping 4h21 as requested)
AddLabel(
    FourHourLabel and fourHourAggregationPeriod,
    "4h21: " + Round(fourHourEMA, 0) + " ",
    if (fourHourPrice - fourHourEMA)/fourHourEMA*100 > 1 then GlobalColor("StrongAbove")
    else if fourHourPrice > fourHourEMA then GlobalColor("MildAbove")
    else if (fourHourPrice - fourHourEMA)/fourHourEMA*100 < -1 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);

AddLabel(
    ThirtyMinLabel and thirtyMinAggregationPeriod,
    "30m21: " + Round(thirtyMinEMA, 0) + " ",
    if (thirtyMinPrice - thirtyMinEMA)/thirtyMinEMA*100 > 1 then GlobalColor("StrongAbove")
    else if thirtyMinPrice > thirtyMinEMA then GlobalColor("MildAbove")
    else if (thirtyMinPrice - thirtyMinEMA)/thirtyMinEMA*100 < -1 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);

AddLabel(
    FifteenMinLabel and fifteenMinAggregationPeriod,
    "15m21: " + Round(fifteenMinEMA, 0) + " ",
    if (fifteenMinPrice - fifteenMinEMA)/fifteenMinEMA*100 > 1 then GlobalColor("StrongAbove")
    else if fifteenMinPrice > fifteenMinEMA then GlobalColor("MildAbove")
    else if (fifteenMinPrice - fifteenMinEMA)/fifteenMinEMA*100 < -1 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
AddLabel(
    FiveMinLabel and fiveMinAggregationPeriod,
    "5m21: " + Round(fiveMinEMA, 0) + " ",
    if (fiveMinPrice - fiveMinEMA)/fiveMinEMA*100 > 1 then GlobalColor("StrongAbove")
    else if fiveMinPrice > fiveMinEMA then GlobalColor("MildAbove")
    else if (fiveMinPrice - fiveMinEMA)/fiveMinEMA*100 < -1 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);

AddLabel(
    ThreeMinLabel and threeMinAggregationPeriod,
    "3m21: " + Round(threeMinEMA, 0) + " ",
    if (threeMinPrice - threeMinEMA)/threeMinEMA*100 > 1 then GlobalColor("StrongAbove")
    else if threeMinPrice > threeMinEMA then GlobalColor("MildAbove")
    else if (threeMinPrice - threeMinEMA)/threeMinEMA*100 < -1 then GlobalColor("StrongBelow")
    else GlobalColor("MildBelow")
);
